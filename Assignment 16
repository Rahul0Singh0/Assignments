//1.Write a program to calculate the sum of two matrices each of order 3x3.
#include<stdio.h>
int main()
{
    int c[3][3];
    int a[3][3]={1,2,3,
             4,5,6,
             7,8,9};
    int b[3][3]={1,2,3,
                 4,5,6,
                 7,8,9};
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            c[i][j]=a[i][j]+b[i][j];
        }
    }
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            printf("%d ",c[i][j]);
        }

        printf("\n");
    }
    return 0;
}

//2.Write a program to calculate the product of two matrices each of order 3x3.
#include<stdio.h>
int main()
{
    int i,j,k;
    int a[3][3]={1,2,1,2,3,1,1,2,3};
    int b[3][3]={1,2,2,2,1,1,3,2,3};
    int c[3][3],sum=0;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            for(k=0;k<3;k++)
            {
                sum=sum+(a[i][k]*b[k][j]);
            }
            c[i][j]=sum;
            sum=0;   
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",c[i][j]);
        }
        printf("\n");
    }
    return 0;
}

//3.WAP to find transpose of a given matrix
#include<stdio.h>
int main()
{
    int a[3][3]={1,2,3,
                 4,5,6
                 ,7,8,9};
    int b[3][3];
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            b[i][j]=a[j][i];
        }
    }
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            printf("%d ",b[i][j]);
        }
        printf("\n");
    }
}

//4.Write a program in C to find the sum of right diagonals of a matrix.
#include<stdio.h>
int main()
{
    int a[3][3]={1,2,3,4,5,6,7,8,9};
    int sum=0;
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            if(i==j)
            {
                sum+=a[i][j];
            }
        }
    }
    printf("Sum of right diagonal is %d",sum);
    return 0;
}

//5.Write a program in C to find the sum of left diagonals of a matrix.
#include<stdio.h>
int main()
{
    int a[3][3]={1,2,3,4,5,6,7,8,9};
    int m=3,i,j,sum=0;
    for(i=0;i<3;i++)
    {
        m=m-1;
        for(j=0;j<3;j++)
        {
            if(m==j)
            {
                sum+=a[i][j];
            }
        }
    }
    printf("Sum of left diagonal is %d",sum);
    return 0;
}

//6.Write a program in C to find the sum of rows and columns of a Matrix.
#include<stdio.h>
int main()
{
    int a[3][3]={3,21,4,11,47,98,8,5,46};
    int rows=0,col=0;
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            rows+=a[i][j];
            col+=a[j][i];
        }
    }
    printf("rows = %d\n columns = %d",rows,col);
    return 0;
}

// 7.Write a program in C to print or display the lower triangular of a given matrix.
#include<stdio.h>
int main()
{
    int a[3][3]={1,2,3,4,5,6,7,8,9};
    int i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i<j)
            {
                a[i][i]=0;
            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}


//8.Write a program in C to print or display an upper triangular matrix.
#include<stdio.h>
int main()
{
    int a[3][3]={1,2,3,4,5,6,7,8,9};
    int i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i>j)
            {
                a[i][j]=0;
            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}

//9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.
#include<stdio.h>
int main()
{
    int a[3][3]={0,21,0,7,0,0,2,0,0};
    int count=0;
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            if(a[i][j]==0)
            {
                count++;
            }
        }
    }
    if(count>9/2)
    {
        printf("Sparse matrix");
    }
    else
    {
        printf("Not a sparse matrix");
    }
    return 0;
}

//10. Write a program in C to find the row with maximum number of 1s.
#include<stdio.h>
int main()
{
    int a[3][3]={1,2,3,4,5,6,7,8,9};
    int max=0,index=0,sum=0;
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            if(a[i][j]==1)
            {
                sum+=a[i][j];
            }
            if(sum>max)
            {
                max=sum;
                index=i;
            }
        }
    }
    printf("index=%d\nmax=%d",index,max);
    return 0;
}
